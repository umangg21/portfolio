{"version":3,"sources":["components/common/Button/Button.jsx","components/Home/Landing/Landing.jsx","components/Home/LandingContact/LandingContact.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","this","props","text","className","children","secondary","primary","restProps","style","type","Component","Landing","download","target","rel","href","ContactLinks","icon","link","title","LandingContact","map","item","LandingContactCard","src","process","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+UAsBeA,G,6KAjBD,IAAD,EACmEC,KAAKC,MAArEC,EADH,EACGA,KAAMC,EADT,EACSA,UAAWC,EADpB,EACoBA,SAAmBC,GADvC,EAC8BC,QAD9B,EACuCD,WAAcE,EADrD,qEAECC,EAAQH,EAAY,YAAc,UACxC,OACI,0CAAQF,UAAS,cAASK,EAAT,YAAkBL,GAAaM,KAAK,UAAaF,GAC9D,2BAAIL,GAAQE,Q,GANPM,cCgCNC,EAhCf,uKAEQ,OACI,yBAAKR,UAAU,+CACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,8BAAb,yBAEJ,yBAAKA,UAAU,2BACX,uBAAGS,SAAS,eAAeC,OAAO,SAASC,IAAI,sBAAuBC,KAAK,iCACvE,kBAAC,EAAD,CAAQT,SAAO,EAACJ,KAAK,cAIjC,yBAAKC,UAAU,8CACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,QAAb,+FACA,8EAAmD,2BAAG,2BAAG,uBAAGA,UAAU,OAAOW,IAAI,sBAAsBD,OAAO,SAASE,KAAK,6BAAnE,cAAzD,iIAIJ,yBAAKZ,UAAU,2BACX,uBAAGU,OAAO,SAASC,IAAI,sBAAsBC,KAAK,+BAC9C,kBAAC,EAAD,CAAQV,WAAS,EAACH,KAAK,wBAvBnD,GAA6BQ,aCDvBM,G,MAAe,CACjB,CACIC,KAAM,4BACNC,KAAM,wCACNC,MAAO,YAEX,CACIF,KAAM,0BACNC,KAAM,+BACNC,MAAO,YAEX,CACIF,KAAM,kCACNC,KAAM,uDACNC,MAAO,eAEX,CACIF,KAAM,gCACNC,KAAM,iDACNC,MAAO,YAEX,CACIF,KAAM,wBACNC,KAAM,2CACNC,MAAO,YAEX,CACIF,KAAM,4BACNC,KAAM,qCACNC,MAAO,YAGX,CACIF,KAAM,6BACNC,KAAM,sCACNC,MAAO,cAmBAC,E,uKAZP,OACI,iCACI,yBAAKjB,UAAU,sDAEPa,EAAaK,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAoBA,KAAMA,a,GAPhDZ,aAkBvBa,EAAqB,SAACtB,GAAW,IAAD,EACJA,EAAMqB,KAA5BL,EAD0B,EAC1BA,KAAMC,EADoB,EACpBA,KAAMC,EADc,EACdA,MACpB,OACI,yBAAKhB,UAAU,wBACX,uBAAGY,KAAMG,EAAML,OAAO,SAASC,IAAI,uBAC/B,yBAAKU,IAAG,UAAKC,aAAL,YAA+BR,GAAQS,IAAI,KACnD,yBAAKvB,UAAU,gBACX,0BAAMA,UAAU,YAAhB,2BACA,uBAAGA,UAAU,SAAb,IAAuBgB,OCxD5BQ,MARf,WACE,OAAQ,oCACN,kBAAC,EAAD,MACA,kBAAC,EAAD,QCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c7726df2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport \"./Button.scss\"\n\nclass Button extends Component {\n    render() {\n        const { text, className, children, primary, secondary, ...restProps } = this.props\n        const style = secondary ? \"secondary\" : \"primary\"\n        return (\n            <button className={`btn ${style} ${className}`} type=\"button\" {...restProps}>\n                <p>{text || children}</p>\n            </button>\n        )\n    }\n}\n\nButton.propTypes = {\n    text : PropTypes.string,\n    primary: PropTypes.bool,\n    secondary: PropTypes.bool\n}\n\nexport default Button\n\n","import React, { Component } from 'react'\nimport \"./Landing.scss\"\nimport Button from '../../common/Button/Button'\n\nexport class Landing extends Component {\n    render() {\n        return (\n            <div className=\"min-vh-100 bg-blue d-flex landing-container\">\n                <div className=\"block-left landing-block-left\">\n                    <div className=\"min-vh-70 content\">\n                        <p className=\"text-white ls-3 p-1 fw-400\">hi, i am umang gupta</p>\n                    </div>\n                    <div className=\"min-vh-30 btn-container\">\n                        <a download=\"Umang_Resume\" target=\"_blank\" rel=\"noopener noreferrer\"  href=\"assets/files/Umang-Resume.pdf\">\n                            <Button primary text=\"Resume\" />\n                        </a>\n                    </div>\n                </div>\n                <div className=\"block-right landing-block-right text-white\">\n                    <div className=\"min-vh-70 content\">\n                        <p className=\"mb-4\">A frontend developer having 3+ years of experience in developing enterprise level web apps.</p>\n                        <p>I am currently working as Frontend Developer at <b><i><a className=\"link\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.indmoney.com/\">INDmoney</a></i></b>,\n                        where we are building a wealth mangement platform where you can earn, save and track all your investments and liabilities.\n                        </p>\n                    </div>\n                    <div className=\"min-vh-30 btn-container\">\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/umangg21\">\n                            <Button secondary text=\"Git Profile\" />\n                        </a>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default Landing\n","import React, { Component } from 'react'\nimport \"./LandingContact.scss\"\n\nconst ContactLinks = [\n    {\n        icon: \"assets/icons/linkedin.svg\",\n        link: \"https://www.linkedin.com/in/umangg21/\",\n        title: \"umangg21\"\n    },\n    {\n        icon: \"assets/icons/github.svg\",\n        link: \"https://github.com/umangg21/\",\n        title: \"umangg21\"\n    },\n    {\n        icon: \"assets/icons/stack-overflow.svg\",\n        link: \"https://stackoverflow.com/users/6018646/umang-gupta/\",\n        title: \"umang-gupta\"\n    },\n    {\n        icon: \"assets/icons/InterviewBit.svg\",\n        link: \"https://www.interviewbit.com/profile/umangg21/\",\n        title: \"umangg21\"\n    },\n    {\n        icon: \"assets/icons/code.svg\",\n        link: \"https://www.codechef.com/users/umangg21/\",\n        title: \"umangg21\"\n    },\n    {\n        icon: \"assets/icons/facebook.svg\",\n        link: \"https://www.facebook.com/umangg21/\",\n        title: \"umangg21\"\n    },\n\n    {\n        icon: \"assets/icons/instagram.svg\",\n        link: \"https://www.instagram.com/umangg21/\",\n        title: \"umangg21\"\n    },\n]\n\nclass LandingContact extends Component {\n\n    render() {\n        return (\n            <section>\n                <div className=\"min-vh-50 bg-blue d-flex landing-contact-container\">\n                    {\n                        ContactLinks.map((item) => <LandingContactCard item={item} />)\n                    }\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default LandingContact\n\n\nconst LandingContactCard = (props) => {\n    const { icon, link, title } = props.item\n    return (\n        <div className=\"landing-contact-card\">\n            <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src={`${process.env.PUBLIC_URL}/${icon}`} alt=\"\"></img>\n                <div className=\"text-section\">\n                    <span className=\"subtitle\">Click here to know more</span>\n                    <p className=\"title\">/{title}</p>\n                </div>\n            </a>\n        </div >\n    )\n}","import React from 'react';\nimport Landing from './components/Home/Landing/Landing';\nimport LandingContact from './components/Home/LandingContact/LandingContact';\n\nfunction App() {\n  return (<>\n    <Landing />\n    <LandingContact />\n  </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}