{"version":3,"sources":["components/Home/Landing/Landing.jsx","utils/Analytics.js","components/Home/LandingContact/LandingContact.jsx","components/common/Button/Button.jsx","components/Home/LandingCta/LandingCta.jsx","components/Home/ContactMe/ContactMe.jsx","components/Home/LandingExperience/LandingExperience.jsx","components/Home/Projects/ProjectCard.jsx","components/Home/Projects/LandingProjectContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["React","memo","className","rel","target","href","Analytics","shouldSendAnalyticsEvents","process","init","window","script","document","createElement","src","async","onload","gtag","dataLayer","push","arguments","Date","body","appendChild","track","Contacts","icon","link","title","type","map","item","key","LandingContactCard","props","onClick","alt","Button","this","text","children","secondary","primary","restProps","style","Component","download","Contact","qrCode","ExperienceData","exp","org","orgLink","timeline","LandingExperience","Array","isArray","ex","ProjectCard","project","image","shortDesc","techTags","cta","console","log","navlink","tech","width","Navlink","LandingProjectContainer","projects","require","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d6db2863.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Landing.scss\"\n\nconst Landing = () => {\n    return (\n        <div className=\"bg-blue landing-container\">\n            <div className=\"landing-block-left\">\n                <div className=\"content\">\n                    <p className=\"text-white ls-3 p-1 fw-400\">hi, i am <br />umang gupta</p>\n                </div>\n\n            </div>\n            <div className=\"landing-block-right text-white\">\n                <div className=\"content\">\n                    <p className=\"mb-4\">A frontend developer having 3+ years of experience in developing enterprise-level web apps.</p>\n                    <p>I am currently working as a Frontend Developer at <b><i><a className=\"link\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.indmoney.com/\">INDmoney</a></i></b>,\n                        where we are building a wealth management platform where you can earn, save, and track all your investments and liabilities.\n                        </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Landing)\n","export default class Analytics {\n\n    static shouldSendAnalyticsEvents = () => process.env.NODE_ENV === \"production\"\n\n    static init = () => {\n        //  Global site tag (gtag.js) - Google Analytics \n\n        if (this.shouldSendAnalyticsEvents() && !window[\"dataLayer\"]) {\n            const script = document.createElement('script');\n            script.src = 'https://www.googletagmanager.com/gtag/js?id=G-FG51BK6SF0';\n            script.async = true;\n            script.onload = function () {\n                window.dataLayer = window.dataLayer || [];\n                function gtag() {\n                    window.dataLayer.push(arguments);\n                }\n                gtag('js', new Date());\n                gtag('config', 'G-FG51BK6SF0');\n            }\n            document.body.appendChild(script);\n        }\n    }\n\n\n\n    static track = (...args) => {\n        if (this.shouldSendAnalyticsEvents() && window.gtag) {\n            window.gtag(...args)\n        }\n    }\n}","import React from 'react'\nimport \"./LandingContact.scss\"\nimport Analytics from '../../../utils/Analytics'\n\nconst Contacts = [\n    {\n        icon: \"assets/icons/github.svg\",\n        link: \"https://github.com/umangg21/\",\n        title: \"umangg21\",\n        type: \"github\"\n    },\n    {\n        icon: \"assets/icons/stack-overflow.svg\",\n        link: \"https://stackoverflow.com/users/6018646/umang-gupta/\",\n        title: \"umang-gupta\",\n        type: \"stack-overflow\"\n    },\n    {\n        icon: \"assets/icons/InterviewBit.svg\",\n        link: \"https://www.interviewbit.com/profile/umangg21/\",\n        title: \"umangg21\",\n        type: \"InterviewBit\"\n    },\n    {\n        icon: \"assets/icons/code.svg\",\n        link: \"https://www.codechef.com/users/umangg21/\",\n        title: \"umangg21\",\n        type: \"codechef\"\n    },\n    {\n        icon: \"assets/icons/linkedin.svg\",\n        link: \"https://www.linkedin.com/in/umangg21/\",\n        title: \"umangg21\",\n        type: \"linkedin\"\n    },\n    {\n        icon: \"assets/icons/twitter.svg\",\n        link: \"https://twitter.com/umangg21\",\n        title: \"umangg21\",\n        type: \"twitter\"\n    },\n    {\n        icon: \"assets/icons/instagram.svg\",\n        link: \"https://www.instagram.com/umangg21/\",\n        title: \"umangg21\",\n        type: \"instagram\"\n    },\n    {\n        icon: \"assets/icons/facebook.svg\",\n        link: \"https://www.facebook.com/umangg21/\",\n        title: \"umangg21\",\n        type: \"facebook\"\n    },\n]\n\n\nconst LandingContact = () => {\n    return (\n        <div className=\"min-vh-50 bg-blue landing-contact-root\">\n            <p className=\"landing-contact-heading\">Click below to know more about me.</p>\n            <div className=\"landing-contact-container\">\n                {\n                    Contacts.map((item) => <LandingContactCard item={item} key={item?.icon} />)\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(LandingContact)\n\n\nconst LandingContactCard = (props) => {\n    const { icon, link, title, type } = props.item\n    return (\n        <div className=\"landing-contact-card\">\n            <a href={link} target=\"_blank\" rel=\"noopener noreferrer\"\n                onClick={() => {\n                    Analytics.track(\"Click on About Me\", { title: type })\n                }}\n            >\n                <img src={`${process.env.PUBLIC_URL}/${icon}`} alt=\"\"></img>\n                <div className=\"text-section\">\n                    <span className=\"subtitle\">Click here to know more</span>\n                    <p className=\"title\">/{title}</p>\n                </div>\n            </a>\n        </div >\n    )\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport \"./Button.scss\"\n\nclass Button extends Component {\n    render() {\n        const { text, className, children, primary, secondary, ...restProps } = this.props\n        const style = secondary ? \"secondary\" : \"primary\"\n        return (\n            <button className={`btn ${style} ${className}`} type=\"button\" {...restProps}>\n                <p>{text || children}</p>\n            </button>\n        )\n    }\n}\n\nButton.propTypes = {\n    text : PropTypes.string,\n    primary: PropTypes.bool,\n    secondary: PropTypes.bool\n}\n\nexport default Button\n\n","import React from 'react'\nimport \"./LandingCta.scss\"\nimport Button from '../../common/Button/Button'\nimport Analytics from '../../../utils/Analytics'\n\nconst LandingCta = () => {\n    return (\n        <div className=\"bg-blue btn-container\">\n            <a download=\"Umang_Resume\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"assets/files/Umang-Resume.pdf\"\n                onClick={() => {\n                    Analytics.track(\"Click on Resume Download\")\n                }}\n            >\n                <Button primary text=\"Resume\" />\n            </a>\n            <div className=\"space\" />\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/umangg21\"\n                onClick={() => {\n                    Analytics.track(\"Click on Git Profile\")\n                }}\n            >\n                <Button secondary text=\"Git Profile\" />\n            </a>\n        </div>\n    )\n}\n\nexport default React.memo(LandingCta) \n","import React from 'react'\nimport \"./ContactMe.scss\"\nimport Analytics from '../../../utils/Analytics'\n\nconst Contact = [\n    {\n        title: \"gmail\",\n        icon: \"assets/icons/gmail.svg\",\n        link: \"mailto:umangg21@gmail.com\",\n        text: \"umangg21@gmail.com\",\n        qrCode: \"\"\n    },\n    {\n        title: \"whatsapp\",\n        icon: \"assets/icons/whatsapp.svg\",\n        link: \"https://wa.link/f4h0lw\",\n        text: \"Click here to whatsapp\",\n        qrCode: \"\"\n    },\n    {\n        title: \"telegram\",\n        icon: \"assets/icons/telegram.svg\",\n        link: \"https://t.me/umangg21\",\n        text: \"Click here to start chat\",\n        qrCode: \"\"\n    },\n\n]\n\nconst ContactMe = () => {\n    return (\n        <div className=\"bg-gray  min-vh-50 contact-container\">\n            <div className=\"contact-heading\">Contact Me</div>\n\n            {\n                Contact.map((item) =>\n                    <div className=\"contact-card text-center\" key={item.title}>\n                        <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\"\n                            onClick={() => {\n                                Analytics.track(\"Click on Contact Me\", { title: item.title })\n                            }}\n                        >\n                            <img src={`${process.env.PUBLIC_URL}/${item.icon}`} alt=\"\"></img>\n                            {item.text && <p>{item.text}</p>}\n                        </a>\n                    </div>\n                )\n            }\n\n        </div>\n    )\n}\n\nexport default React.memo(ContactMe) \n","import React from 'react'\nimport \"./LandingExperience.scss\"\n\nconst ExperienceData = [\n    {\n        title: \"Experience\",\n        icon: \"assets/icons/experience/layers.svg\",\n        exp: [\n            {\n                title: \"Software Engineer - Frontend\",\n                org: \"INDmoney, Gurugram\",\n                orgLink: \"http://indmoney.com/\",\n                timeline: \"March 2019 - Present\"\n            },\n            {\n                title: \"Software Engineer\",\n                org: \"Infogain India Private Limited, Noida\",\n                orgLink: \"https://www.infogain.com/\",\n                timeline: \"July 2017 - March 2019\"\n            }\n        ]\n    },\n    {\n        title: \"Internship\",\n        icon: \"assets/icons/experience/medal.svg\",\n        exp: [\n            {\n                title: \"Summer Intern\",\n                org: \"ITC Limited\",\n                orgLink: \"https://www.itcportal.com/\",\n                timeline: \"May 2016 - June 2016\"\n            },\n            {\n                title: \"Research Intern\",\n                org: \"Indian Institute of Remote Sensing (IIRS) - ISRO\",\n                orgLink: \"https://www.iirs.gov.in/\",\n                timeline: \"May 2015 - June 2015\"\n            }\n        ]\n    },\n    {\n        title: \"Education\",\n        icon: \"assets/icons/experience/mortarboards.svg\",\n        exp: [\n            {\n                title: \"Bachelor of Technology - CSE\",\n                org: \"ABES Engineering College\",\n                orgLink: \"https://www.abes.ac.in/\",\n                timeline: \"2013 - 2017\"\n            },\n        ]\n    }\n]\n\nconst LandingExperience = () => {\n    return (\n        <div className=\"min-vh-50\">\n            <p className=\"experience-heading\">Education and Experience</p>\n\n            <div className=\"experience-container\">\n                {\n                    ExperienceData.map((item) =>\n                        <div className=\"experience-card\" key={item?.title}>\n                            <img src={`${process.env.PUBLIC_URL}/${item.icon}`} alt=\"\"></img>\n                            <p className=\"card-title\">{item.title}</p>\n\n                            {\n                                Array.isArray(item?.exp) && item?.exp.map((ex) =>\n                                    <div key={ex.org}>\n                                        <p className=\"ex-title\">{ex.title}</p>\n                                        <a className=\"ex-org\" href={ex.orgLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <p>{ex.org}</p>\n                                        </a>\n                                        <p className=\"ex-timeline\">{ex.timeline}</p>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    )\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default LandingExperience\n\n","import React from 'react'\nimport \"./ProjectCard.scss\"\nimport Analytics from '../../../utils/Analytics'\n\n\nconst ProjectCard = (props) => {\n\n    const { project } = props\n    const { image, title, shortDesc, techTags,\n        cta: {\n            primary, secondary\n        } = {}\n    } = project\n\n    console.log(process.env.REACT_APP_DOC_TITLE, process.env.NODE_ENV)\n\n    return (\n        <div className=\"project-card\">\n            <a className=\"card-details\" href={primary.navlink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                onClick={() => {\n                    Analytics.track(\"Click on Project Card\", { title })\n                }}\n            >\n                <div className=\"card-image-container\">\n                    <img className=\"card-image\" src={`${process.env.PUBLIC_URL}/assets/images/${image}`} alt=\"\" />\n                </div>\n                <p className=\"card-title\">{title}</p>\n                <p className=\"card-desc\">{shortDesc}</p>\n\n                <ul className=\"tags-list\">\n                    {\n                        Array.isArray(techTags) && techTags.map((tech) => <div className=\"tags\" key={tech}>{tech}</div>)\n                    }\n                </ul>\n\n            </a>\n\n            <div className=\"card-button-container\">\n                <div className=\"card-button-inner-container d-flex\">\n                    {\n                        primary && <Navlink title={primary.title} navlink={primary.navlink} width={secondary ? 50 : 100} />\n                    }\n                    {\n                        secondary && <Navlink title={secondary.title} navlink={secondary.navlink} />\n                    }\n                </div>\n\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProjectCard\n\n\nconst Navlink = ({ title, navlink, width = 50 }) => {\n    return <a className=\"view-code-button\"\n        href={navlink}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        onClick={() => {\n            Analytics.track(\"Click on Project Cta\", { title, navlink })\n        }}\n        style={{ width: `${width}%` }}>{title}</a>\n}\n","import React from 'react'\nimport \"./LandingProjectContainer.scss\"\nimport ProjectCard from './ProjectCard'\n\nconst LandingProjectContainer = () => {\n\n    const projects = require(\"./ProjectsSummary.json\")\n\n    return (\n        <div className=\"\">\n            <hr/>\n            <p className=\"experience-heading\">Projects</p>\n\n            <div className=\"project-container\">\n\n                {\n                    Array.isArray(projects) && projects.map((project) => <ProjectCard project={project} />)\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default LandingProjectContainer\n","import React from 'react';\nimport Landing from './components/Home/Landing/Landing';\nimport LandingContact from './components/Home/LandingContact/LandingContact';\nimport LandingCta from './components/Home/LandingCta/LandingCta';\nimport ContactMe from './components/Home/ContactMe/ContactMe';\nimport LandingExperience from './components/Home/LandingExperience/LandingExperience';\nimport LandingProjectContainer from './components/Home/Projects/LandingProjectContainer';\n\n\nfunction App() {\n  return (<>\n    <Landing />\n    <LandingCta />\n    <LandingContact />\n    <LandingExperience />\n    <LandingProjectContainer />\n    <ContactMe />\n  </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Analytics from './utils/Analytics';\n\nAnalytics.init()\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}